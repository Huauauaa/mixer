{"version":3,"sources":["components/Timestamp.tsx","components/CopyButton.tsx","components/NameFormat.tsx","components/JSONFormat.tsx","components/IntlPanel.tsx","components/GItGist.tsx","components/Symbol.tsx","components/ColorFormat.tsx","route.ts","views/Home.tsx","views/Tool.tsx","views/MDN.tsx","views/Gist.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Option","Select","Timestamp","useState","inputTime","setInputTime","transformValue","setTransformValue","unit","setUnit","hour12","setHour12","useEffect","Date","Number","toLocaleString","className","value","onChange","e","target","defaultValue","onClick","checked","addonAfter","CopyButton","text","children","title","icon","CopyOutlined","clipboard","Clipboard","on","message","info","destroy","NameFormat","data","setData","type","_","camelCase","upperFirst","kebabCase","lowerCase","snakeCase","toUpperCase","startCase","upperCase","placeholder","bordered","dataSource","renderItem","item","Item","style","display","TextArea","Input","JSONFormat","input","setInput","jsonObj","JSON","parse","formatStr","stringify","error","console","autoSize","showCount","number","IntlPanel","result","setResult","options","setOptions","undefined","locales","setLocales","setStyle","currency","setCurrency","useGrouping","setUseGrouping","currencyDisplay","setCurrencyDisplay","currencySign","setCurrencySign","log","Intl","NumberFormat","format","padding","gutter","span","labelCol","wrapperCol","layout","initialValues","label","name","Group","Button","valuePropName","GitGist","map","key","dataIndex","render","record","size","cmd","Symbol","en","cn","index","toRGBArray","rgbStr","match","RGBToHSB","rgb","r","g","b","v","Math","max","n","min","h","ColorFormat","routers","path","component","props","tools","filter","startsWith","to","items","setValue","hex","alpha","slice","length","x","join","h1","parseInt","hexToRGB","App","route","exact","location","pathname","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4d691dce.chunk.js","sourcesContent":["import { Input, Select, Button, Switch } from 'antd';\nimport React, { Dispatch, SetStateAction, useState, useEffect } from 'react';\nimport '../assets/timestamp.less';\n\nconst { Option } = Select;\n\nfunction Timestamp() {\n  const [inputTime, setInputTime]: [\n    string,\n    Dispatch<SetStateAction<string>>,\n  ] = useState<string>('');\n  const [transformValue, setTransformValue] = useState('');\n  const [unit, setUnit] = useState('s');\n  const [hour12, setHour12] = useState(false);\n\n  const onInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setInputTime(e.target.value);\n  };\n\n  const onUnitChange = (value: string) => {\n    setUnit(value);\n  };\n\n  const onTransform = () => {\n    setTransformValue(\n      new Date(Number(inputTime) * (unit === 's' ? 1e3 : 1)).toLocaleString(\n        'zh-ch',\n        {\n          hour12,\n        },\n      ),\n    );\n  };\n\n  useEffect(() => {\n    setTransformValue(\n      new Date(Number(inputTime) * (unit === 's' ? 1e3 : 1)).toLocaleString(\n        'zh-ch',\n        {\n          hour12,\n        },\n      ),\n    );\n  }, [hour12, inputTime, unit]);\n\n  return (\n    <div className=\"timestamp\">\n      时间戳\n      <Input value={inputTime} onChange={onInputChange}></Input>\n      <Select defaultValue={unit} onChange={onUnitChange}>\n        <Option value=\"s\">秒(s)</Option>\n        <Option value=\"ms\">毫秒(ms)</Option>\n      </Select>\n      <Button onClick={onTransform}>转换 &gt;&gt; </Button>\n      hour12:\n      <Switch onChange={(checked) => setHour12(checked)}></Switch>\n      <Input value={transformValue} addonAfter={'北京时间'}></Input>\n    </div>\n  );\n}\n\nexport default Timestamp;\n","import Clipboard from 'clipboard';\nimport React from 'react';\nimport { CopyOutlined } from '@ant-design/icons';\nimport { Button, message, Tooltip } from 'antd';\n\nfunction CopyButton({ text, children }: { text: string; children?: string }) {\n  const copy = () => {\n    const clipboard = new Clipboard('.copy', {\n      text: () => {\n        return text;\n      },\n    });\n    clipboard.on('success', () => {\n      message.info('复制成功');\n      clipboard.destroy();\n    });\n    clipboard.on('error', () => {\n      message.info('复制失败，请重新复制');\n      clipboard.destroy();\n    });\n  };\n  return (\n    <Tooltip title=\"复制\">\n      <Button icon={<CopyOutlined />} className=\"copy\" onClick={copy}>\n        {children}\n      </Button>\n    </Tooltip>\n  );\n}\n\nexport default CopyButton;\n","import { Input, List } from 'antd';\nimport { Dispatch, SetStateAction, useState } from 'react';\nimport _ from 'lodash';\nimport React from 'react';\nimport CopyButton from './CopyButton';\n\nfunction NameFormat() {\n  const [data, setData]: [\n    FormatType[],\n    Dispatch<SetStateAction<FormatType[]>>,\n  ] = useState<FormatType[]>([]);\n\n  const onInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value;\n    setData([\n      {\n        type: 'camelCase',\n        text: _.camelCase(value),\n      },\n      {\n        type: 'bigCamelCase',\n        text: _.upperFirst(_.camelCase(value)),\n      },\n      {\n        type: 'kebabCase',\n        text: _.kebabCase(value),\n      },\n      {\n        type: 'lowerCase',\n        text: _.lowerCase(value),\n      },\n      {\n        type: 'snakeCase',\n        text: _.snakeCase(value),\n      },\n      {\n        type: 'upperSnakeCase',\n        text: _.snakeCase(value).toUpperCase(),\n      },\n      {\n        type: 'startCase',\n        text: _.startCase(value),\n      },\n      {\n        type: 'upperCase',\n        text: _.upperCase(value),\n      },\n    ]);\n  };\n\n  return (\n    <div className=\"name-format\">\n      <Input onChange={onInputChange} placeholder=\"请输入\"></Input>\n      <List\n        bordered\n        dataSource={data}\n        renderItem={item => (\n          <List.Item style={{ display: 'flex' }}>\n            {item.type}: {item.text}\n            <CopyButton text={item.text}></CopyButton>\n          </List.Item>\n        )}\n      />\n    </div>\n  );\n}\n\nexport default NameFormat;\n","import React, { useState } from 'react';\nimport { Button, Input, message } from 'antd';\nimport CopyButton from './CopyButton';\n\nconst { TextArea } = Input;\n\nfunction JSONFormat() {\n  const [input, setInput] = useState('');\n\n  const onChange = (e: React.ChangeEvent<HTMLTextAreaElement>): void => {\n    setInput(e.target.value);\n  };\n\n  const onFormat = () => {\n    try {\n      const jsonObj = JSON.parse(input);\n      const formatStr = JSON.stringify(jsonObj, null, '\\t');\n      setInput(formatStr);\n    } catch (error) {\n      message.error('转换有误');\n      console.error(error);\n    }\n  };\n\n  return (\n    <div>\n      <Button onClick={onFormat}>格式化</Button>\n      <CopyButton text={input}></CopyButton>\n      <TextArea value={input} onChange={onChange} autoSize showCount />\n    </div>\n  );\n}\n\nexport default JSONFormat;\n","import React, { useState, useEffect } from 'react';\nimport { Form, Radio, Switch, Row, Col, Statistic } from 'antd';\nimport TextArea from 'antd/lib/input/TextArea';\nimport CopyButton from './CopyButton';\n\nconst number = -123456.789;\n\nconst IntlPanel = () => {\n  const [result, setResult] = useState<string>('');\n  const [options, setOptions] = useState<string>('');\n  const [locales, setLocales] = useState<string | undefined>(undefined);\n  const [style, setStyle] = useState<string>('decimal');\n  const [currency, setCurrency] = useState<string>('CNY');\n  const [unit, setUnit] = useState<string>('acre');\n  const [useGrouping, setUseGrouping] = useState<boolean>(true);\n  const [currencyDisplay, setCurrencyDisplay] = useState<string>('symbol');\n  const [currencySign, setCurrencySign] = useState<string>('standard');\n\n  useEffect(() => {\n    const options = {\n      style,\n      currency,\n      unit,\n      useGrouping,\n      currencyDisplay,\n      currencySign,\n    };\n    console.log(options);\n    setOptions(\n      `new Intl.NumberFormat(${JSON.stringify(locales)}, ${JSON.stringify(\n        options,\n        null,\n        '\\t',\n      )}).format(${number})`,\n    );\n    setResult(new Intl.NumberFormat(locales, options).format(number));\n  }, [\n    locales,\n    style,\n    currency,\n    unit,\n    useGrouping,\n    currencyDisplay,\n    currencySign,\n  ]);\n\n  return (\n    <div style={{ padding: '10px' }}>\n      <Row gutter={16}>\n        <Col span={12}>\n          <Statistic title=\"原值\" value={number} />\n        </Col>\n        <Col span={12}>\n          <Statistic title=\"结果\" value={result} />\n        </Col>\n      </Row>\n\n      <Form\n        labelCol={{ span: 4 }}\n        wrapperCol={{ span: 14 }}\n        layout=\"horizontal\"\n        initialValues={{\n          locales,\n          style,\n          currency,\n          unit,\n          useGrouping,\n          currencyDisplay,\n          currencySign,\n        }}\n      >\n        <Form.Item label=\"locales\" name=\"locales\">\n          <Radio.Group onChange={(e) => setLocales(e.target.value)}>\n            <Radio.Button value={undefined}>Undefined</Radio.Button>\n            <Radio.Button value=\"zh\">中</Radio.Button>\n            <Radio.Button value=\"en\">英</Radio.Button>\n            <Radio.Button value=\"ar\">Arabic</Radio.Button>\n            <Radio.Button value=\"ru\">Russian</Radio.Button>\n            <Radio.Button value=\"ja\">Japanese</Radio.Button>\n            <Radio.Button value=\"ko\">Korean</Radio.Button>\n          </Radio.Group>\n        </Form.Item>\n        <Form.Item label=\"style\" name=\"style\">\n          <Radio.Group onChange={(e) => setStyle(e.target.value)}>\n            <Radio.Button value=\"decimal\">decimal(Default)</Radio.Button>\n            <Radio.Button value=\"currency\">currency</Radio.Button>\n            <Radio.Button value=\"percent\">percent</Radio.Button>\n            <Radio.Button value=\"unit\">unit</Radio.Button>\n          </Radio.Group>\n        </Form.Item>\n        {style === 'currency' ? (\n          <>\n            <Form.Item label=\"currency\" name=\"currency\">\n              <Radio.Group onChange={(e) => setCurrency(e.target.value)}>\n                <Radio.Button value=\"CNY\">CNY人民币</Radio.Button>\n                <Radio.Button value=\"USD\">USD美元</Radio.Button>\n                <Radio.Button value=\"EUR\">EUR欧元</Radio.Button>\n                <Radio.Button value=\"Yen\">Yen日元</Radio.Button>\n              </Radio.Group>\n            </Form.Item>\n            <Form.Item label=\"currencyDisplay\" name=\"currencyDisplay\">\n              <Radio.Group onChange={(e) => setCurrencyDisplay(e.target.value)}>\n                <Radio.Button value=\"symbol\">symbol(default)</Radio.Button>\n                <Radio.Button value=\"narrowSymbol\">narrowSymbol</Radio.Button>\n                <Radio.Button value=\"code\">code</Radio.Button>\n                <Radio.Button value=\"name\">name</Radio.Button>\n              </Radio.Group>\n            </Form.Item>\n            <Form.Item label=\"currencySign\" name=\"currencySign\">\n              <Radio.Group onChange={(e) => setCurrencySign(e.target.value)}>\n                <Radio value=\"standard\">standard</Radio>\n                <Radio value=\"accounting\">accounting</Radio>\n              </Radio.Group>\n            </Form.Item>\n          </>\n        ) : null}\n        {style === 'unit' ? (\n          <Form.Item label=\"unit\" name=\"unit\">\n            <Radio.Group onChange={(e) => setUnit(e.target.value)}>\n              <Radio.Button value=\"acre\">土地</Radio.Button>\n              <Radio.Button value=\"day\">天</Radio.Button>\n              <Radio.Button value=\"degree\">度</Radio.Button>\n            </Radio.Group>\n          </Form.Item>\n        ) : null}\n        <Form.Item\n          label=\"useGrouping\"\n          name=\"useGrouping\"\n          valuePropName=\"checked\"\n        >\n          <Switch onChange={(checked) => setUseGrouping(checked)} />\n        </Form.Item>\n      </Form>\n      <CopyButton text={options}>复制代码</CopyButton>\n      <TextArea value={options} autoSize showCount />\n    </div>\n  );\n};\n\nexport default IntlPanel;\n","import { Space, Table } from 'antd';\nimport Column from 'antd/lib/table/Column';\nimport React from 'react';\nimport CopyButton from './CopyButton';\nimport dataSource from '../json/git.json';\n\ntype GitType = {\n  desc: string;\n  cmd: string;\n};\n\nconst GitGist = () => {\n  return (\n    <>\n      <Table dataSource={dataSource.map((item, key) => ({ ...item, key }))}>\n        <Column title=\"description\" dataIndex=\"desc\" key=\"desc\" />\n        <Column title=\"command\" dataIndex=\"cmd\" key=\"cmd\" />\n        <Column title=\"Example\" dataIndex=\"example\" key=\"example\" />\n        <Column\n          title=\"操作\"\n          key=\"action\"\n          render={(text, record: GitType) => (\n            <Space size=\"middle\">\n              <CopyButton text={record.cmd}></CopyButton>\n            </Space>\n          )}\n        />\n      </Table>\n    </>\n  );\n};\n\nexport default GitGist;\n","import React from 'react';\nimport { Space, Table } from 'antd';\nimport Column from 'antd/lib/table/Column';\nimport CopyButton from './CopyButton';\ntype SymbolType = {\n  name: string;\n  cn: string;\n  en: string;\n};\n\nconst Symbol = () => {\n  const dataSource = [\n    {\n      name: '冒号',\n      en: ':',\n      cn: '：',\n    },\n    {\n      name: '小括号',\n      en: '()',\n      cn: '（）',\n    },\n    {\n      name: '中括号',\n      en: '[]',\n      cn: '【】',\n    },\n    {\n      name: '分号',\n      en: ';',\n      cn: '；',\n    },\n    {\n      name: '引号',\n      en: `''`,\n      cn: '“”',\n    },\n    {\n      name: '逗号',\n      en: `,`,\n      cn: '，',\n    },\n  ].map((item, index) => ({ ...item, key: index }));\n\n  return (\n    <Table dataSource={dataSource}>\n      <Column title=\"名称\" dataIndex=\"name\" />\n      <Column title=\"中文\" dataIndex=\"cn\" />\n      <Column title=\"英文\" dataIndex=\"en\" />\n      <Column\n        title=\"操作\"\n        render={(text, record: SymbolType) => (\n          <Space size=\"middle\">\n            <CopyButton text={record.cn}></CopyButton>\n          </Space>\n        )}\n      />\n    </Table>\n  );\n};\n\nexport default Symbol;\n","import React, { Dispatch, SetStateAction, useState } from 'react';\nimport { List } from 'antd';\nimport CopyButton from './CopyButton';\n\nfunction hexToRGB(hex: string) {\n  let alpha = false;\n  let h = hex.slice(hex.startsWith('#') ? 1 : 0);\n  if (h.length === 3) h = [...h].map(x => x + x).join('');\n  else if (h.length === 8) alpha = true;\n  const h1 = parseInt(h, 16);\n  return (\n    'rgb' +\n    (alpha ? 'a' : '') +\n    '(' +\n    (h1 >>> (alpha ? 24 : 16)) +\n    ', ' +\n    ((h1 & (alpha ? 0x00ff0000 : 0x00ff00)) >>> (alpha ? 16 : 8)) +\n    ', ' +\n    ((h1 & (alpha ? 0x0000ff00 : 0x0000ff)) >>> (alpha ? 8 : 0)) +\n    (alpha ? `, ${h1 & 0x000000ff}` : '') +\n    ')'\n  );\n}\n\nfunction toRGBArray(rgbStr: string) {\n  const result = rgbStr.match(/\\d+/g);\n  if (result) {\n    return result.map(Number);\n  }\n  return [];\n}\n\nfunction RGBToHSB(rgb: number[]) {\n  let [r, g, b] = rgb;\n  r /= 255;\n  g /= 255;\n  b /= 255;\n  const v = Math.max(r, g, b),\n    n = v - Math.min(r, g, b);\n  const h =\n    n === 0\n      ? 0\n      : n && v === r\n      ? (g - b) / n\n      : v === g\n      ? 2 + (b - r) / n\n      : 4 + (r - g) / n;\n  return [60 * (h < 0 ? h + 6 : h), v && (n / v) * 100, v * 100];\n}\n\nfunction ColorFormat() {\n  const [value, setValue] = useState('');\n  const [data, setData]: [\n    FormatType[],\n    Dispatch<SetStateAction<FormatType[]>>,\n  ] = useState<FormatType[]>([]);\n\n  function onChange(e: React.ChangeEvent<HTMLInputElement>) {\n    setValue(e.target.value);\n    const rgb = hexToRGB(e.target.value);\n    setData([\n      {\n        type: 'HEX',\n        text: e.target.value,\n      },\n      {\n        type: 'RGB',\n        text: rgb,\n      },\n      {\n        type: 'HSB',\n        text: `${RGBToHSB(toRGBArray(rgb))}`,\n      },\n    ]);\n  }\n\n  return (\n    <div>\n      <input type=\"color\" onChange={onChange} value={value} />\n      {data.length ? (\n        <List\n          bordered\n          dataSource={data}\n          renderItem={item => (\n            <List.Item style={{ display: 'flex' }}>\n              {item.type}: {item.text}\n              <CopyButton text={item.text}></CopyButton>\n            </List.Item>\n          )}\n        />\n      ) : null}\n    </div>\n  );\n}\n\nexport default ColorFormat;\n","import Home from './views/Home';\nimport Tool from './views/Tool';\nimport MDN from './views/MDN';\nimport Gist from './views/Gist';\nimport Timestamp from './components/Timestamp';\nimport NameFormat from './components/NameFormat';\nimport JSONFormat from './components/JSONFormat';\nimport IntlPanel from './components/IntlPanel';\nimport GitGist from './components/GItGist';\nimport Symbol from './components/Symbol';\nimport ColorFormat from './components/ColorFormat';\n\nconst routers = [\n  {\n    path: '/',\n    name: 'Home',\n    type: 'menu',\n    label: '首页',\n    component: Home,\n  },\n  {\n    path: '/tool',\n    name: 'Tool',\n    type: 'menu',\n    label: '工具',\n    component: Tool,\n  },\n  {\n    path: '/tool/timestamp',\n    name: 'Timestamp',\n    label: '时间戳',\n    component: Timestamp,\n  },\n  {\n    path: '/tool/name-format',\n    name: 'NameFormat',\n    label: '命名格式化',\n    component: NameFormat,\n  },\n  {\n    path: '/tool/json-format',\n    name: 'JSONFormat',\n    label: 'JSON格式化',\n    component: JSONFormat,\n  },\n  {\n    path: '/tool/symbol',\n    name: 'Symbol',\n    label: '一些符号',\n    component: Symbol,\n  },\n  {\n    path: '/MDN',\n    name: 'MDN',\n    type: 'menu',\n    label: 'MDN',\n    component: MDN,\n  },\n  {\n    path: '/MDN/Intl',\n    name: 'Intl',\n    label: 'Intl',\n    component: IntlPanel,\n  },\n  {\n    path: '/gist',\n    name: 'Gist',\n    type: 'menu',\n    label: 'Gist',\n    component: Gist,\n  },\n  {\n    path: '/gist/git',\n    name: 'Git',\n    label: 'Git',\n    component: GitGist,\n  },\n  {\n    path: '/tool/color-format',\n    name: 'ColorFormat',\n    label: '颜色格式化',\n    component: ColorFormat,\n  },\n];\n\nexport default routers;\n","import { RouteComponentProps } from 'react-router-dom';\nimport '../assets/home.less';\n\nexport default function Home(props: RouteComponentProps) {\n  return <div className=\"home\"></div>;\n}\n","import { Link, RouteComponentProps } from 'react-router-dom';\nimport routers from '../route';\nimport { List } from 'antd';\n\nexport default function Tool(props: RouteComponentProps) {\n  const tools = routers.filter((item) => item.path.startsWith('/tool/'));\n  return (\n    <div className=\"tool\">\n      <List\n        bordered\n        dataSource={tools}\n        renderItem={(item) => (\n          <List.Item>\n            <Link to={item.path}>{item.label}</Link>\n          </List.Item>\n        )}\n      />\n    </div>\n  );\n}\n","import { Link, RouteComponentProps } from 'react-router-dom';\nimport routers from '../route';\nimport { List } from 'antd';\n\nexport default function MDN(props: RouteComponentProps) {\n  const items = routers.filter((item) => item.path.startsWith('/MDN/'));\n  return (\n    <List\n      bordered\n      dataSource={items}\n      renderItem={(item) => (\n        <List.Item>\n          <Link to={item.path}>{item.label}</Link>\n        </List.Item>\n      )}\n    />\n  );\n}\n","import { Link, RouteComponentProps } from 'react-router-dom';\nimport routers from '../route';\nimport { List } from 'antd';\n\nexport default function MDN(props: RouteComponentProps) {\n  const items = routers.filter((item) => item.path.startsWith('/gist/'));\n  return (\n    <List\n      bordered\n      dataSource={items}\n      renderItem={(item) => (\n        <List.Item>\n          <Link to={item.path}>{item.label}</Link>\n        </List.Item>\n      )}\n    />\n  );\n}\n","import React from 'react';\nimport './App.less';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Link,\n  RouteComponentProps,\n} from 'react-router-dom';\nimport routers from './route';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          {routers.map((route) => {\n            return (\n              <Route\n                path={route.path}\n                key={route.name}\n                exact\n                render={(props: RouteComponentProps) => {\n                  const { location } = props;\n                  return (\n                    <>\n                      <nav className=\"menu\">\n                        <ul>\n                          {routers\n                            .filter((item) => item.type === 'menu')\n                            .map((r) => {\n                              return (\n                                <li\n                                  key={r.name}\n                                  className={\n                                    location.pathname === r.path ? 'active' : ''\n                                  }\n                                >\n                                  <Link to={r.path}>{r.label}</Link>\n                                </li>\n                              );\n                            })}\n                        </ul>\n                      </nav>\n                      <route.component {...props}></route.component>\n                    </>\n                  );\n                }}\n              ></Route>\n            );\n          })}\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.less';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}